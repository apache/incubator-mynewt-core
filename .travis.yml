# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

language: go

_addons: &addon_conf
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-7-multilib
      - linux-libc-dev:i386

go:
  - "1.10"

matrix:
  include:
    # newt build <targets>
    - os: linux
      env:
        - TEST=BUILD_TARGETS
        - TARGET_SET=1
    - os: linux
      env:
        - TEST=BUILD_TARGETS
        - TARGET_SET=2
    - os: linux
      env:
        - TEST=BUILD_TARGETS
        - TARGET_SET=3
    - os: linux
      env:
        - TEST=BUILD_TARGETS
        - TARGET_SET=4

    # newt build <blinky-for-BSP>
    - os: linux
      env:
        - TEST=BUILD_BLINKY
        - TARGET_SET=1
    - os: linux
      env:
        - TEST=BUILD_BLINKY
        - TARGET_SET=2
    - os: linux
      env:
        - TEST=BUILD_BLINKY
        - TARGET_SET=3
    - os: linux
      env:
        - TEST=BUILD_BLINKY
        - TARGET_SET=4

    # newt test all (Linux)
    - os: linux
      addons: *addon_conf
      env:
        - TEST=TEST_ALL
    #- os: osx
    #  osx_image: xcode9.2
    #  env:
    #    - TEST=BUILD_TARGETS
    #- os: osx
    #  osx_image: xcode9.2
    #  env:
    #    - TEST=BUILD_BLINKY
    - os: osx
      osx_image: xcode9.2
      env:
        - TEST=TEST_ALL

install:
- printenv
- export GOPATH=$HOME/gopath
- go version

- git clone -b testing https://github.com/utzig/mynewt-travis-ci $HOME/ci
- chmod +x $HOME/ci/*.sh
- $HOME/ci/${TRAVIS_OS_NAME}_travis_install.sh

- newt version
- gcc --version
- arm-none-eabi-gcc --version

script:
- cp -R $HOME/ci/mynewt-core-project.yml project.yml
- cp -R $HOME/ci/mynewt-core-targets targets

  # Break the targets into different sets to distribute work among containers
  # The total sets must match the amount specified in the matrix
- TOTAL_SETS=4
- set_size=$(echo "$(ls targets/mynewt-core-targets | wc -l) / ${TOTAL_SETS} + 1" | bc)
- set=0; off=1; sets=()
- |
  while [[ $set -lt $TOTAL_SETS ]]; do
    sets[$set]=$(ls targets/mynewt-core-targets | tail -n +$off | head -n $set_size);
    set=$((set + 1));
    off=$((off + set_size));
  done
- export TARGET_SET1=${sets[0]}
- export TARGET_SET2=${sets[1]}
- export TARGET_SET3=${sets[2]}
- export TARGET_SET4=${sets[3]}

  # Break the BSPs into different sets to distribute work among containers
  # The total sets must match the amount specified in the matrix
- set_size=$(echo "$(ls ${TRAVIS_BUILD_DIR}/hw/bsp | wc -l) / ${TOTAL_SETS} + 1" | bc)
- set=0; off=1; sets=()
- |
  while [[ $set -lt $TOTAL_SETS ]]; do
    sets[$set]=$(ls ${TRAVIS_BUILD_DIR}/hw/bsp | tail -n +$off | head -n $set_size);
    set=$((set + 1));
    off=$((off + set_size));
  done
- export BLINKY_SET1=${sets[0]}
- export BLINKY_SET2=${sets[1]}
- export BLINKY_SET3=${sets[2]}
- export BLINKY_SET4=${sets[3]}

- newt install

  # the following list of targets are known to fail building blinky, or
  # might have extra dependencies hard to provide, non-common toolchains, etc
  # NOTE: "native" is here to avoid having to install gcc-multilib
- export IGNORED_BSPS="ci40 embarc_emsk hifive1 native-armv7 native-mips
                       pic32mx470_6lp_clicker pic32mz2048_wi-fire sensorhub
                       native"
- $HOME/ci/run_test.sh

cache:
  directories:
  - $HOME/TOOLCHAIN
  - $HOME/Library/Caches/Homebrew
